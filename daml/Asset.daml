-- Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

-- A simple asset with issuer and owner.
-- This module is intended to be used in conjunction with Account module, which implements the account for holding assets
-- An Asset contract can be created without corresponding AssetHoldingAccount contract, however all manipulation
-- of the asset (transfer etc.) can only be done through corresponding account

module Asset where

-- Asset type is identified by a combination of issuer, symbol, fungible and reference properties.
-- Optional reference field can be used for purposes like
-- identifying a specific item in a run of non-fungible tokens.
data AssetType = AssetType with
    -- The issuer of the asset.
    issuer: Party
    -- A symbol for the asset. Uniquely identifies the type of asset amongst
    -- those issued by the issuer
    symbol: Text
    -- Is the asset fungible, i.e. can it be split and merged
    fungible : Bool
    -- A possible reference for NFTs and the like
    reference : Optional Text     
  deriving (Eq, Show)
  
-- The Asset template represents an asset holding.
-- An Asset is co-signed by the issuer and the owner.
-- Thus, an Asset is a contract between issuer and owner and can 
-- represent assets as well as liabilities.
template Asset with
    assetType : AssetType
    -- The asset owner
    owner : Party
    -- The amount of the asset
    amount : Decimal
  where
    signatory assetType.issuer, owner
    ensure (if assetType.fungible then amount>0.0 else (amount==1.0))


